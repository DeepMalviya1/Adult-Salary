# -*- coding: utf-8 -*-
"""Adult_salary.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZLqSTky1QbHPyU2wOrR0RDLH7MmpPpDE

# Import basic libraries, data and observe data
"""

import numpy as np
import pandas as pd
import seaborn as sns
sns.set_style("whitegrid")

data = pd.read_csv('path')

data.head()

data.info()

data.describe(include = 'all')

data.isnull().sum()

"""#Preprocessing"""

cat = [i for i in data.columns if data[i].dtype == "O"]
cat

for features in cat:
  print(data[features].value_counts())
  print("\n \n")

print(f"WorkingClass: {round(2799/48842, 5) *100 } %")
print(f"Occupation: {round(2809/48842, 4) *100 } %")
print(f"NativeCountry: {round(857/48842, 5) *100 } %")

data["WorkingClass"] = data["WorkingClass"].str.replace('?','Private')
data["Occupation"] = data["Occupation"].str.replace('?','Prof-specialty')
data["NativeCountry" ]= data["NativeCountry"].str.replace('?','United-States')

data['Education'].replace(['Preschool','1st-4th','5th-6th','7th-8th','9th','10th','11th','12th'],'school',inplace = True, regex = True)
data['Education'].replace(['Doctorate','Prof-school','Assoc-acdm','Assoc-voc','Masters','Bachelors','Some-college','HS-grad'],'higher', inplace = True, regex = True)

data['MaritalStatus'].replace(['Married-civ-spouse','Married-AF-spouse'],'Married',inplace = True, regex = True)
data['MaritalStatus'].replace(['Divorced','Separated','Widowed','Married-spouse-absent',],'Other',inplace = True, regex = True)

data['Income'] = data['Income'].replace({"<=50K": 0, ">50K" : 1 }, regex = True)

data

from sklearn.preprocessing import LabelEncoder
df = data.apply(LabelEncoder().fit_transform)

df.head()

import matplotlib.pyplot as plt
corr = df.corr()
plt.figure(figsize = (16,7))
sns.heatmap(corr,annot = True)
plt.tight_layout()

df.columns

"""# Data Splitting and Scaling"""

X = df[['Age', 'Gender', 'WorkingClass', 'Education', 'MaritalStatus',
       'Occupation', 'Relationship', 'Race', 'NativeCountry']]
       
y = df['Income']

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.8, random_state=2529)

X_train.shape, X_test.shape, y_train.shape, y_test.shape

from sklearn.preprocessing import StandardScaler

ss = StandardScaler()

X_train = ss.fit_transform(X_train)
X_test = ss.fit_transform(X_test)

"""#Modelling"""

from sklearn.linear_model import LogisticRegression

lr = LogisticRegression()

lr.fit(X_train,y_train)

pred = lr.predict(X_test)

pred

"""#Results"""

from sklearn.metrics import classification_report, confusion_matrix

print(classification_report(y_test,pred))
print(confusion_matrix(y_test,pred))
cm = confusion_matrix(y_test,pred)

plt.figure(figsize = (8,6))
sns.heatmap(cm,annot = True, cmap = 'magma',cbar = False, fmt = 'g')